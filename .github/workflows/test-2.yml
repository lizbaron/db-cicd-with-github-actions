name: Test Stuff 2

# Controls when the action will run. 
on:
#  push:
#    branches:
#      - breaking-thing-more
  workflow_dispatch: 
    inputs:
      projectName:
        description: 'Project Name'     
        required: true
        default: 'db_cicd_project'
      msSqlVersions:
        description: 'names of the k8s deployment files in JSON array format (e.g. ["mssql2008r2","mssql2012","mssql2014","mssql2016","mssql2017","mssql2019"])'
        required: true
        default: '["mssql2016"]'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  job-1:
    name: set vars
    runs-on: windows-latest # Kubectl 1.20

    env:
      PROJECT_NAME: ${{ github.event.inputs.projectName }}
      MS_SQL_VERSIONS: ${{ github.event.inputs.msSqlVersions }}
      SQL_PORT_MIN: 40000
      SQL_PORT_MAX: 42999

    steps:
      - name: create vars
        id: create-vars
        shell: pwsh
        run: |
          $msSqlVersionArray = ($env:MS_SQL_VERSIONS|ConvertFrom-Json);
          $msSqlVersionForMatrix = '{"mssqlversion":'+$env:MS_SQL_VERSIONS+'}';

          $randomSqlPorts = $env:SQL_PORT_MIN..$env:SQL_PORT_MAX | Get-Random -Shuffle | Select-Object -First ($msSqlVersionArray.count)
          $msSqlPorts = @{};
          $portNumber = 0;
          $msSqlVersionArray|ForEach{$msSqlPorts += @{"$_"=$randomSqlPorts[$portNumber++]}}
          $serializedPorts = ($msSqlPorts|ConvertTo-Json -compress);
          
          $matrixDataString = ($msSqlPorts|ConvertTo-Json -compress).replace("'","''")

          Write-Host "✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ";
          Write-Host "";
          Write-Host ("env:PROJECT_NAME value: {0}" -f $env:PROJECT_NAME);
          Write-Host ("env:MS_SQL_VERSIONS value: {0}" -f $env:MS_SQL_VERSIONS);
          Write-Host ("msSqlVersionForMatrix: {0}" -f "$msSqlVersionForMatrix"); 
          Write-Host ("matrixDataString: {0}" -f "$matrixDataString"); 
          Write-Host "";
          Write-Host "✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ✨   ";


          Write-Host ('::set-output name=matrixdata::'+$matrixDataString)
          Write-Host ("::set-output name=msSqlVersionForMatrix::{0}" -f "$msSqlVersionForMatrix"); 
          
    outputs:
      mssqlversion: ${{ steps.create-vars.outputs.mssqlversion }}
      matrixdata: ${{ steps.create-vars.outputs.matrixdata }}
      msSqlVersionForMatrix: ${{ steps.create-vars.outputs.msSqlVersionForMatrix }}

  job-2:
    name: read vars
    needs: job-1
    runs-on: windows-latest # Kubectl 1.20

    strategy:
      matrix: ${{fromJson(needs.job-1.outputs.msSqlVersionForMatrix)}}
 
    steps:
      - name: print vars
        id: print-vars
        shell: pwsh
        run: |
          $matrixData = ('${{ needs.job-1.outputs.matrixdata }}'|ConvertFrom-Json)
          $cc=$matrixData.${{ matrix.mssqlversion }}
          $cc|FT
          $cc.port




