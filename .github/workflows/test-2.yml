name: Test Stuff 2

# Controls when the action will run. 
on:
#  push:
#    branches:
#      - breaking-thing-more
  workflow_dispatch: 
    inputs:
      projectName:
        description: 'Project Name'     
        required: true
        default: 'db_cicd_project'
      msSqlVersions:
        description: 'names of the k8s deployment files in JSON array format (e.g. ["mssql2008r2","mssql2012","mssql2014","mssql2016","mssql2017","mssql2019"])'
        required: true
        default: '["mssql2016"]'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  job-1:
    name: set vars
    runs-on: windows-latest # Kubectl 1.20

    env:
      MS_SQL_VERSIONS: ${{ github.event.inputs.msSqlVersions }}
#      AZ_SERVICE_PRINCIPAL_CREDENTIALS: ${{ secrets[format('AZ_SP_CRED_{0}', github.event.inputs.projectName)] }}
      AZ_SERVICE_PRINCIPAL_CREDENTIALS: ${{ secrets.AZ_SP_CRED_TEST_20210123 }}

    steps:
      - name: Checkout self
        uses: actions/checkout@v2
        with:
          path: cicd

      - name: create vars
        id: create-vars
        shell: pwsh
        run: |
          $msSqlVersionForMatrix = '{"mssqlversion":'+$env:MS_SQL_VERSIONS+'}';
          Write-Host ("msSqlVersionForMatrix: {0}" -f "$msSqlVersionForMatrix"); 
          Write-Host ("::set-output name=msSqlVersionForMatrix::{0}" -f "$msSqlVersionForMatrix"); 
          
    outputs:
      msSqlVersionForMatrix: ${{ steps.create-vars.outputs.msSqlVersionForMatrix }}

  job-2:
    name: read vars
    needs: job-1
    runs-on: windows-latest # Kubectl 1.20

    strategy:
      matrix: ${{fromJson(needs.job-1.outputs.msSqlVersionForMatrix)}}
 
    steps:
      - name: print vars
        id: print-vars
        shell: pwsh
        run: |
          Write-Host "${{ matrix.mssqlversion }}";



